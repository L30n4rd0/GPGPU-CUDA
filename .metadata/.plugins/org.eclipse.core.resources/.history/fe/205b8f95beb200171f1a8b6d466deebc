/*
 ============================================================================
 Name        : ComutacaoMatrizes.cu
 Author      : Leonardo
 Version     :
 Copyright   : Your copyright notice
 Description : CUDA compute reciprocals
 ============================================================================
 */

#include <iostream>
#include <numeric>
#include <stdlib.h>

#define N 2

__global__ void commutative (int **matrixA, int **matrixB, int *result) {

}

int main(void)
{
	int matrixA[N][N] = {{},
	int matrixB[N][N];
	int result;
	int **dev_matrixA, **dev_matrixB, *dev_result;

	cudaMalloc((void**) &dev_matrixA, N * N * sizeof(int));
	cudaMalloc((void**) &dev_matrixB, N * N * sizeof(int));
	cudaMalloc((void**) &dev_result, sizeof(int));

	matrixA

//	for (int i = 0; i < N; i++) {
//		for (int j = 0; j < N; j++) {
//
//		}
//	}

	printf("Result: %d", result);

	return 0;
}
